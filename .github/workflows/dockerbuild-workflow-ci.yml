name: Python App Build template

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  COMMON_BUILD_REPO: '${{ secrets.COMMON_BUILD_REPO }}/CloudBroker/travis-scripts'
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GHE_TOKEN: ${{ secrets.GHE_TOKEN }}
  AFAAS_TOKEN: ${{ secrets.AFAAS_TOKEN }}
  AFAAS_USER: ${{ secrets.AFAAS_USER }}
  AFAAS_USER_NPM_TOKEN: ${{ secrets.AFAAS_USER_NPM_TOKEN }}
  AFAAS_DOCKER_REGISTRY: ${{ secrets.AFAAS_DOCKER_REGISTRY }}
  PYPI_USER: ${{ secrets.PYPI_USER }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  AFAAS_NPM_USER: ${{ secrets.AFAAS_NPM_USER }}
  AFAAS_NPM_TOKEN: ${{ secrets.AFAAS_NPM_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${Common_Build_Repo}
          token: ${{ secrets.GHE_TOKEN }}
      
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Build docker image if merging to master branch
        run: echo Run the build.sh with paramters
      - name: Build docker image if merging to master branch
        if: ${{ github.ref == 'refs/heads/master' }} && ${{ github.ref == 'refs/heads/release-*' }} && ${{ github.events == 'push' }}
        run: echo Run the build.sh with paramters
